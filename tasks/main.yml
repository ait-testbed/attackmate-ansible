---
# OS/version-specific vars include 
- name: Include Debian version-specific variables
  include_vars: "vars/{{ distribution_lower }}{{ ansible_distribution_major_version }}.yml"
  when: ansible_distribution == 'Debian'
  tags:
    - always

- name: Include Ubuntu version-specific variables
  include_vars: "vars/{{ distribution_lower }}{{ ansible_distribution_version }}.yml"
  when: ansible_distribution == 'Ubuntu'
  tags:
    - always

- name: Include Kali rolling-specific variables
  include_vars: "vars/{{ distribution_lower }}.yml"
  when: ansible_distribution == 'Kali'
  tags:
    - always

- name: Set uv_bin variable
  set_fact:
   uv_bin: "/usr/local/bin/uv"

- name: Install curl
  become: true
  ansible.builtin.package:
    name: curl
  tags:
    - install
    - dependencies

- name: Download uv installer script
  become: true
  ansible.builtin.get_url:
    url: https://astral.sh/uv/install.sh
    dest: /tmp/uv_install.sh
    mode: '0755'
  tags:
    - install
    - grpc

- name: Install uv (Python package manager)
  become: true
  ansible.builtin.shell: |
    UV_INSTALL_DIR="/usr/local/bin" sh /tmp/uv_install.sh
  args:
    creates: "{{ uv_bin }}"
  tags:
    - install
    - grpc

- name: Install packages for attackmate
  become: true
  ansible.builtin.package:
    name: "{{ attackmate_packages }}"
  tags:
    - install
    - dependencies

- name: Install tmux
  become: true
  ansible.builtin.package:
    name: tmux
  when: attackmate_tmux
  tags:
    - install
    - tmux

- name: Git checkout
  ansible.builtin.git:
    repo: "{{ attackmate_url }}"
    dest: "{{ attackmate_dest }}"
    version: "{{ attackmate_version }}"
  tags:
    - install
    - git
    - molecule-idempotence-notest

- name: Create virtual environment with uv
  become: true
  ansible.builtin.shell:
    chdir: "{{ attackmate_dest }}"
    cmd: "uv venv"
  args:
    creates: "{{ attackmate_dest }}/.venv"
  tags:
    - install
    - pip

- name: Prepare AttackMate package with uv
  become: true
  ansible.builtin.shell:
    chdir: "{{ attackmate_dest }}"
    cmd: "uv pip install --python .venv/bin/python ."
  args:
    creates: "{{ attackmate_dest }}/dist"
  tags:
    - install
    - pip
    - molecule-idempotence-notest

- name: Create symlinks for attackm8 and attackmate executables
  become: true
  ansible.builtin.file:
    src: "{{ attackmate_dest }}/.venv/bin/attackmate"
    dest: "/usr/local/bin/{{ item }}"
    state: link
    force: true
  loop:
    - attackm8
    - attackmate
  tags:
    - install

- name: Deploy attackmate-tmux
  ansible.builtin.template:
    src: attackmate-tmux.j2
    dest: "{{ attackmate_bindir }}/attackmate-tmux"
    mode: '0755'
  when: attackmate_tmux
  tags:
    - install
    - tmux

- name: Include config
  ansible.builtin.include_tasks: 
    file: "config.yml"
    apply:
      tags:
        - config

- name: Test sliverfix-lock
  ansible.builtin.shell:
    cmd: "test -e {{ attackmate_dest }}/venv/.sliverfix"
  register: sliverfix_result
  failed_when: sliverfix_result.stderr == "Error"
  tags:
    - molecule-idempotence-notest

- name: Include sliverfix
  ansible.builtin.include_tasks: 
    file: "sliverfix.yml"
    apply:
      tags:
        - sliverfix
  when: attackmate_sliverfix and sliverfix_result.rc == 1
  tags:
    - always
    - molecule-idempotence-notest

- name: Include Playwright setup
  ansible.builtin.include_tasks:
    file: "playwright.yml"
    apply:
      tags:
        - playwright
  when: attackmate_playwright
